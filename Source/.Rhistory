source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
rm codeschool_user.json
rm(codeschool.json)
rm(codeschool.profile)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
head(links)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
View(codeschool.htmlCssCourses)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
View(codeschool.htmlCssCourses)
View(codeschool_user.json)
View(codeschool_user.json$courses)
View(codeschool_user.json$courses$completed)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
codeschool.htmlCssCourses.completed
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
codeschool.htmlCssCourses.completed
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
codeschool.htmlCssPercent
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
options(stringsAsFactors=FALSE)
options(knitr.kable.NA = '')
library('rvest')
library('readr')
library('jsonlite')
library('knitr')
source("./CodeSchool.R")
# Generelles Ablaufdatum von Daten, die manuellen Einfluss ben√∂tigen:
vor6Monaten <- Sys.Date() - 30*6
datacamp.profile <- "https://www.datacamp.com/profile/sthoffmann";
treehouse.profile <- "https://teamtreehouse.com/stefanhoffmann.json";
codeschool.profile <- "https://www.codeschool.com/users/stho";
pluralsight_details <- fromJSON("https://app.pluralsight.com/profile/data/skillmeasurements/f68703d3-cf25-4d49-96ae-ef5f005e9d7e")
pluralsight_details$dateCompleted <- as.Date(pluralsight_details$dateCompleted)
pluralsight_details <- pluralsight_details[order(pluralsight_details$percentile),]
colnames(pluralsight_details)[2] <- "Tech"
colnames(pluralsight_details)[6] <- "IQ"
colnames(pluralsight_details)[8] <- "Last measured"
datacamp_points <- html_session(datacamp.profile) %>%
html_node(".profile-header__stats") %>%
html_node(".stats-block__number") %>%
html_text() %>%
readr::parse_number()
treehouse.points_detailed <- fromJSON(treehouse.profile)
treehouse_points <- treehouse.points_detailed$points$total
codeschool_points <- html_session(codeschool.profile) %>%
html_node(".bucket-content .list-item strong") %>%
html_text() %>%
readr::parse_number()
# github project count
# microsoft mva
# ... certs
punkte <- c(datacamp_points, treehouse_points, codeschool_points)
names(punkte) <- c("DataCamp", "TeamTreehouse", "CodeSchool")
maximalpunktzahl <- c(50696, 131540, 72)
prozentangabenVektor <- punkte / maximalpunktzahl * 100
names(prozentangabenVektor) <- paste(names(punkte))
prozentangabenVektor = prozentangabenVektor[order(-prozentangabenVektor)]
overviewPerPortal <- as.data.frame(prozentangabenVektor)
colnames(overviewPerPortal)[1] <- "Learning progress %"
overviewPerPortal$`Learning progress %` <- round(overviewPerPortal$`Learning progress %`, digits = 2)
overviewPerPortal <- data.frame(
portal = rownames(overviewPerPortal),
`Learning progress %` = overviewPerPortal
)
colnames(overviewPerPortal) <- c("portal", "Learning progress %")
rownames(overviewPerPortal) <- NULL
overviewPerTech <- data.frame(list(
tech = character(),
certificate = character(),
pluralsight_score_in_percent = numeric(),
codeschool_progress = numeric(),
treehouse_progress = numeric(),
dataCamp_progress = numeric()
))
techinfo <- function (name, certificate, pluralsightTopics, codeschoolPercent = NA, dataCamp = NA) {
pluralsight_score <- NA
if (length(pluralsightTopics) > 0) {
pluralsight_score <- mean(pluralsight_details[pluralsight_details$id %in% pluralsightTopics,]$score)
pluralsight_score <- round(pluralsight_score / 300 * 100, 2)
}
return(
list(
tech = name,
certificate = certificate,
pluralsight_score_in_percent = pluralsight_score,
codeschool_progress = codeschoolPercent,
treehouse_progress = NA,
dataCamp_progress = round(dataCamp, digits = 2)
))
}
overviewPerTech<-rbind(overviewPerTech, techinfo("HTML, CSS, JS", "MS (70-480, 2016)", c("javascript", "jquery", "css", "html5"), codeschoolPercent = mean( c(codeschool.htmlCssPercent, codeschool.javascriptPercent))))
overviewPerTech<-rbind(overviewPerTech, techinfo("ASP.Net", "-", c("aspnet-mvc-5")))
overviewPerTech<-rbind(overviewPerTech, techinfo("C#", "-", c("c-sharp"), codeschoolPercent = codeschool.netPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("MS SQL Server", "-", c(), codeschoolPercent = codeschool.databasePercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("Powershell", "-", c("powershell")))
overviewPerTech<-rbind(overviewPerTech, techinfo("R", "-", c(), dataCamp = overviewPerPortal[overviewPerPortal$portal == "DataCamp",]$`Learning progress %`, codeschoolPercent =   codeschool.rPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("PHP", "-", c(), codeschoolPercent = codeschool.phpPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("MySQL", "-", c(), codeschoolPercent = codeschool.databasePercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("C++", "-", c()))
kable(overviewPerTech, col.names = c("tech", "certificate", "Pluralsight score in %", "CodeSchool Progress %", "Treehouse Progress %", "DataCamp Progress %"))
kable(overviewPerPortal)
pluralsight_iq = pluralsight_details[c("Tech", "IQ")]
pluralsight_details$`IQ` <- round(pluralsight_details$`IQ`, digits=2)
prozentangabenVektor <- pluralsight_iq$`IQ`
names(prozentangabenVektor) <- pluralsight_iq$Tech
aktualisierungNotwendig <- c()
aktualisierungNotwendig <- ifelse(pluralsight_details$`Last measured` < vor6Monaten, "Update neccessary!", "")
pluralsight_details <- cbind(pluralsight_details, aktualisierungNotwendig)
colnames(pluralsight_details)[9] <- "Update neccessary?"
pluralsight_details$`Last measured` <- format(pluralsight_details$`Last measured`, "%d.%m.%Y")
kable(pluralsight_details[c("Tech", "IQ", "Last measured", "Update neccessary?")], row.names = FALSE)
treehouse.maximalePunkte.letztesUpdate <- as.Date("2018-02-03");
if ( treehouse.maximalePunkte.letztesUpdate <= vor6Monaten ) {
print("Please visit https://teamtreehouse.com/community/leaderboards and update the maximum points per category using the points of the current leaders per category!")
}
treehouse.wichtigeKategorien <- c(
"HTML", "CSS", "Design", "JavaScript", "PHP", "WordPress", "Development.Tools",
"C.", "Databases", "Data.Analysis", "APIs", "Security", "Quality.Assurance")
treehouse.maximalePunkte <- list(
HTML = 6933,
CSS = 11423,
Design = 5033,
JavaScript = 29958,
PHP = 8166,
WordPress = 8192,
Development.Tools = 4649,
C. = 12527, # C#
Databases = 5728,
Data.Analysis = 908,
APIs = 756,
Security = 852,
Quality.Assurance = 221
)
treehouse.gefiltert <- t(as.data.frame(treehouse.points_detailed$points))
treehouse.gefiltert <- subset(treehouse.gefiltert, row.names(treehouse.gefiltert) %in% treehouse.wichtigeKategorien)
treehouse.gefiltert <- cbind(treehouse.gefiltert, treehouse.maximalePunkte)
treehouse.gefiltert <- cbind(treehouse.gefiltert, round(unlist(treehouse.gefiltert[,1]) / unlist(treehouse.gefiltert[,2]) * 100, digits = 2))
colnames(treehouse.gefiltert)[1] <- "My Points"
colnames(treehouse.gefiltert)[2] <- "Max. Points"
colnames(treehouse.gefiltert)[3] <- "Progress %"
rownames(treehouse.gefiltert)[which(rownames(treehouse.gefiltert) == "C.")] <- "C#"
kable(treehouse.gefiltert, align=c(rep('r',times=3)))
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
options(stringsAsFactors=TRUE)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
?html_session
library(httr)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
r <- GET("http://httpbin.org/get")
r
GET("https://www.codeschool.com/learn/html-css")
GET("https://www.codeschool.com/learn/html-css", user_agent("httr"))
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
View(result)
result[["content"]]
?httr::GET
as.character(result[["content"]])
str(result[["content"]])
content(result, "text")
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
View(links)
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
View(links)
result
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
View(links)
links[[1]]
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
View(links)
links <- str_match_all(result, pattern = "<a href=\"/courses/(.+)\">")[[1]][,2]
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
codeschool
CodeSchool.GetCoursesForPath("html-css")
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
codeschool
source('~/Documents/Projekte/LearningProgress-R/Source/CachedWebRequests.R')
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
options(stringsAsFactors=FALSE)
options(knitr.kable.NA = '')
library('rvest')
library('readr')
library('jsonlite')
library('knitr')
source("./CodeSchool.R")
codeschool <- CodeSchool.GetUserInformation("stho")
# Generelles Ablaufdatum von Daten, die manuellen Einfluss ben√∂tigen:
vor6Monaten <- Sys.Date() - 30*6
datacamp.profile <- "https://www.datacamp.com/profile/sthoffmann";
treehouse.profile <- "https://teamtreehouse.com/stefanhoffmann.json";
codeschool.profile <- "https://www.codeschool.com/users/stho";
pluralsight_details <- fromJSON("https://app.pluralsight.com/profile/data/skillmeasurements/f68703d3-cf25-4d49-96ae-ef5f005e9d7e")
pluralsight_details$dateCompleted <- as.Date(pluralsight_details$dateCompleted)
pluralsight_details <- pluralsight_details[order(pluralsight_details$percentile),]
colnames(pluralsight_details)[2] <- "Tech"
colnames(pluralsight_details)[6] <- "IQ"
colnames(pluralsight_details)[8] <- "Last measured"
datacamp_points <- html_session(datacamp.profile) %>%
html_node(".profile-header__stats") %>%
html_node(".stats-block__number") %>%
html_text() %>%
readr::parse_number()
treehouse.points_detailed <- fromJSON(treehouse.profile)
treehouse_points <- treehouse.points_detailed$points$total
codeschool_points <- html_session(codeschool.profile) %>%
html_node(".bucket-content .list-item strong") %>%
html_text() %>%
readr::parse_number()
# github project count
# microsoft mva
# ... certs
punkte <- c(datacamp_points, treehouse_points, codeschool_points)
names(punkte) <- c("DataCamp", "TeamTreehouse", "CodeSchool")
maximalpunktzahl <- c(50696, 131540, 72)
prozentangabenVektor <- punkte / maximalpunktzahl * 100
names(prozentangabenVektor) <- paste(names(punkte))
prozentangabenVektor = prozentangabenVektor[order(-prozentangabenVektor)]
overviewPerPortal <- as.data.frame(prozentangabenVektor)
colnames(overviewPerPortal)[1] <- "Learning progress %"
overviewPerPortal$`Learning progress %` <- round(overviewPerPortal$`Learning progress %`, digits = 2)
overviewPerPortal <- data.frame(
portal = rownames(overviewPerPortal),
`Learning progress %` = overviewPerPortal
)
colnames(overviewPerPortal) <- c("portal", "Learning progress %")
rownames(overviewPerPortal) <- NULL
overviewPerTech <- data.frame(list(
tech = character(),
certificate = character(),
pluralsight_score_in_percent = numeric(),
codeschool_progress = numeric(),
treehouse_progress = numeric(),
dataCamp_progress = numeric()
))
techinfo <- function (name, certificate, pluralsightTopics, codeschoolPercent = NA, dataCamp = NA) {
pluralsight_score <- NA
if (length(pluralsightTopics) > 0) {
pluralsight_score <- mean(pluralsight_details[pluralsight_details$id %in% pluralsightTopics,]$score)
pluralsight_score <- round(pluralsight_score / 300 * 100, 2)
}
return(
list(
tech = name,
certificate = certificate,
pluralsight_score_in_percent = pluralsight_score,
codeschool_progress = codeschoolPercent,
treehouse_progress = NA,
dataCamp_progress = round(dataCamp, digits = 2)
))
}
overviewPerTech<-rbind(overviewPerTech, techinfo("HTML, CSS, JS", "MS (70-480, 2016)", c("javascript", "jquery", "css", "html5"), codeschoolPercent = mean( c(codeschool$htmlCssPercent, codeschool$javascriptPercent))))
overviewPerTech<-rbind(overviewPerTech, techinfo("ASP.Net", "-", c("aspnet-mvc-5")))
overviewPerTech<-rbind(overviewPerTech, techinfo("C#", "-", c("c-sharp"), codeschoolPercent = codeschool$netPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("MS SQL Server", "-", c(), codeschoolPercent = codeschool$databasePercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("Powershell", "-", c("powershell")))
overviewPerTech<-rbind(overviewPerTech, techinfo("R", "-", c(), dataCamp = overviewPerPortal[overviewPerPortal$portal == "DataCamp",]$`Learning progress %`, codeschoolPercent =   codeschool$rPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("PHP", "-", c(), codeschoolPercent = codeschool$phpPercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("MySQL", "-", c(), codeschoolPercent = codeschool$databasePercent))
overviewPerTech<-rbind(overviewPerTech, techinfo("C++", "-", c()))
kable(overviewPerTech, col.names = c("tech", "certificate", "Pluralsight score in %", "CodeSchool Progress %", "Treehouse Progress %", "DataCamp Progress %"))
kable(overviewPerPortal)
pluralsight_iq = pluralsight_details[c("Tech", "IQ")]
pluralsight_details$`IQ` <- round(pluralsight_details$`IQ`, digits=2)
prozentangabenVektor <- pluralsight_iq$`IQ`
names(prozentangabenVektor) <- pluralsight_iq$Tech
aktualisierungNotwendig <- c()
aktualisierungNotwendig <- ifelse(pluralsight_details$`Last measured` < vor6Monaten, "Update neccessary!", "")
pluralsight_details <- cbind(pluralsight_details, aktualisierungNotwendig)
colnames(pluralsight_details)[9] <- "Update neccessary?"
pluralsight_details$`Last measured` <- format(pluralsight_details$`Last measured`, "%d.%m.%Y")
kable(pluralsight_details[c("Tech", "IQ", "Last measured", "Update neccessary?")], row.names = FALSE)
treehouse.maximalePunkte.letztesUpdate <- as.Date("2018-02-03");
if ( treehouse.maximalePunkte.letztesUpdate <= vor6Monaten ) {
print("Please visit https://teamtreehouse.com/community/leaderboards and update the maximum points per category using the points of the current leaders per category!")
}
treehouse.wichtigeKategorien <- c(
"HTML", "CSS", "Design", "JavaScript", "PHP", "WordPress", "Development.Tools",
"C.", "Databases", "Data.Analysis", "APIs", "Security", "Quality.Assurance")
treehouse.maximalePunkte <- list(
HTML = 6933,
CSS = 11423,
Design = 5033,
JavaScript = 29958,
PHP = 8166,
WordPress = 8192,
Development.Tools = 4649,
C. = 12527, # C#
Databases = 5728,
Data.Analysis = 908,
APIs = 756,
Security = 852,
Quality.Assurance = 221
)
treehouse.gefiltert <- t(as.data.frame(treehouse.points_detailed$points))
treehouse.gefiltert <- subset(treehouse.gefiltert, row.names(treehouse.gefiltert) %in% treehouse.wichtigeKategorien)
treehouse.gefiltert <- cbind(treehouse.gefiltert, treehouse.maximalePunkte)
treehouse.gefiltert <- cbind(treehouse.gefiltert, round(unlist(treehouse.gefiltert[,1]) / unlist(treehouse.gefiltert[,2]) * 100, digits = 2))
colnames(treehouse.gefiltert)[1] <- "My Points"
colnames(treehouse.gefiltert)[2] <- "Max. Points"
colnames(treehouse.gefiltert)[3] <- "Progress %"
rownames(treehouse.gefiltert)[which(rownames(treehouse.gefiltert) == "C.")] <- "C#"
kable(treehouse.gefiltert, align=c(rep('r',times=3)))
overviewPerTech
glimpse(overviewPerTech)
library(dplyr)
glimpse(overviewPerTech)
source('~/Documents/Projekte/LearningProgress-R/Source/CodeSchool.R')
